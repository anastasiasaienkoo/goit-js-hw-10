{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import \"flatpickr/dist/flatpickr.min.css\";\nimport flatpickr from \"flatpickr\";\n\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport iziToast from \"izitoast\";\n\nconst datapicker = document.querySelector('#datetime-picker');\nconst button = document.querySelector('[data-start]');\nconst daysEL = document.querySelector('[data-days]');\nconst hoursEL = document.querySelector('[data-hours]');\nconst minutesEL = document.querySelector('[data-minutes]');\nconst secondsEL = document.querySelector('[data-seconds]');\n\n\nlet userSelectedDate = null;\nlet timerInterval = null;\nbutton.disabled = true;\n\n\nconst options = {\n    enableTime: true, //Включает выбор времени\n    time_24hr: true, //При включении отображает выбор времени в 24-часовом режиме без выбора AM/PM.\n    defaultDate: new Date(\n    ), //Устанавливает начальную выбранную дату(ы). Если вы используете mode: \"multiple\"календарь диапазона, укажите Arrayобъекты Dateили массив строк дат, которые следуют за вашим dateFormat. В противном случае вы можете предоставить один объект Date или строку даты.\n    minuteIncrement: 1, //Регулирует шаг ввода часов (включая прокрутку)\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0].getTime();\n        const currentData = new Date().getTime();\n      console.log(selectedDates[0]);\n    \n      if(userSelectedDate < currentData) {\n        iziToast.show({\n            message: 'Please choose a date in the future',\n            iconUrl: 'https://symbl-world.akamaized.net/i/webp/c1/d9d88630432cf61ad335df98ce37d6.webp',\n            messageSize: '16',\n            messageColor: 'white',\n            backgroundColor: '#EF4040',\n            position: 'topRight',\n            width: '302',\n            color: 'white',\n        });\n        button.disabled = true;\n    } else {\n        button.disabled = false;\n      }\n    },\n};\n\n\nflatpickr(datapicker, options);\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n\n  function updatesNum({ days, hours, minutes, seconds }) {\n    daysEL.textContent = String(days).padStart(2, '0');\n    hoursEL.textContent = String(hours).padStart(2, '0');\n    minutesEL.textContent = String(minutes).padStart(2, '0');\n    secondsEL.textContent = String(seconds).padStart(2, '0');\n}\n\n\nbutton.addEventListener('click', (event) => {\n    button.disabled = true;\n    datapicker.disabled = true;\n\n    timerInterval = setInterval(() =>{\n        \n        const currentData = new Date().getTime();\n        const timeout = userSelectedDate - currentData;\n        updatesNum(convertMs(timeout));\n    \n        if(timeout <= 0) {\n            clearInterval(timerInterval);\n            daysEL.textContent = '00';\n            hoursEL.textContent = '00';\n            minutesEL.textContent = '00';\n            secondsEL.textContent = '00';\n            return;\n        }\n    }, 1000);\n      \n})\n\n\n"],"names":["datapicker","button","daysEL","hoursEL","minutesEL","secondsEL","userSelectedDate","timerInterval","options","selectedDates","currentData","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","updatesNum","event","timeout"],"mappings":"2GAMA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAGzD,IAAIC,EAAmB,KACnBC,EAAgB,KACpBN,EAAO,SAAW,GAGlB,MAAMO,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KAEjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBH,EAAmBG,EAAc,CAAC,EAAE,QAAO,EAC3C,MAAMC,EAAc,IAAI,KAAM,EAAC,QAAO,EACxC,QAAQ,IAAID,EAAc,CAAC,CAAC,EAEzBH,EAAmBI,GACpBC,EAAS,KAAK,CACV,QAAS,qCACT,QAAS,kFACT,YAAa,KACb,aAAc,QACd,gBAAiB,UACjB,SAAU,WACV,MAAO,MACP,MAAO,OACnB,CAAS,EACDV,EAAO,SAAW,IAElBA,EAAO,SAAW,EAErB,CACL,EAGAW,EAAUZ,EAAYQ,CAAO,EAE7B,SAASK,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,SAASC,EAAW,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACrDhB,EAAO,YAAc,OAAOa,CAAI,EAAE,SAAS,EAAG,GAAG,EACjDZ,EAAQ,YAAc,OAAOa,CAAK,EAAE,SAAS,EAAG,GAAG,EACnDZ,EAAU,YAAc,OAAOa,CAAO,EAAE,SAAS,EAAG,GAAG,EACvDZ,EAAU,YAAc,OAAOa,CAAO,EAAE,SAAS,EAAG,GAAG,CAC3D,CAGAjB,EAAO,iBAAiB,QAAUmB,GAAU,CACxCnB,EAAO,SAAW,GAClBD,EAAW,SAAW,GAEtBO,EAAgB,YAAY,IAAK,CAE7B,MAAMG,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCW,EAAUf,EAAmBI,EAGnC,GAFAS,EAAWN,EAAUQ,CAAO,CAAC,EAE1BA,GAAW,EAAG,CACb,cAAcd,CAAa,EAC3BL,EAAO,YAAc,KACrBC,EAAQ,YAAc,KACtBC,EAAU,YAAc,KACxBC,EAAU,YAAc,KACxB,MACH,CACJ,EAAE,GAAI,CAEX,CAAC"}